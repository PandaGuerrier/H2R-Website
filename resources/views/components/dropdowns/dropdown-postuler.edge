<div class="relative inline-block text-left">
    <div>
      <button type="button" class="inline-flex w-full justify-center rounded-md px-4 py-2 text-sm font-medium text-purple-500 shadow-sm hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-purple-300 duration-200" id="menu-postuler-btn" aria-expanded="true" aria-haspopup="true">     

        Postuler
        <!-- Heroicon name: mini/chevron-down -->
        <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
          <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
        </svg>
      </button>
    </div>
  
    <!--
      Dropdown menu, show/hide based on menu state.
  
      Entering: "transition ease-out duration-100"
        From: "transform opacity-0 scale-95"
        To: "transform opacity-100 scale-100"
      Leaving: "transition ease-in duration-75"
        From: "transform opacity-100 scale-100"
        To: "transform opacity-0 scale-95"
    -->

    <div class="absolute hidden right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-purple-500 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" id="menu-postuler" aria-orientation="vertical" aria-labelledby="menu-postuler-btn" tabindex="-1">
      <div class="" role="none">
         <!-- Active: "bg-gray-100 text-gray-900", Not Active: "text-gray-700" -->
         <a href="#" class="text-white block px-4 py-2 text-sm hover:bg-sky-400 rounded-t-md">Devenir Formateur</a>
        <a href="#" class="text-white block px-4 py-2 text-sm hover:bg-sky-400 rounded-b-md">Devenir Coach</a>
      </div>
    </div>
  </div>

  <script>
    const buttonPostuler = document.getElementById('menu-postuler-btn');
    const menuPostuler = document.getElementById('menu-postuler');
  
    let showmenuPostuler = false;
  
    buttonPostuler.addEventListener('click', event => {
      showmenuPostuler = !showmenuPostuler;
    
        if (showmenuPostuler) {
          menuPostuler.classList.remove('hidden');
          menuPostuler.classList.add('block');
        } else {
          menuPostuler.classList.remove('block');
          menuPostuler.classList.add('hidden');
        }
    });

    // Close the menu if the user clicks outside of it
    document.addEventListener('click', event => {
        const isClickInside = buttonPostuler.contains(event.target);
    
        if (!isClickInside && showmenuPostuler) {
          buttonPostuler.click();
        }
    });

  </script>