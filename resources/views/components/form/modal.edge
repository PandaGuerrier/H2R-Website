<!-- Code block starts -->
<dh-component>       
    <div class="hidden py-12 transition duration-150 ease-in-out z-10 absolute right-0 top-28 bottom-0 left-0 h-full w-full" id="modal">
        <div role="alert" class="container mx-auto w-11/12 md:w-2/3 max-w-lg">
            <div class="relative py-8 px-5 md:px-10 bg-white shadow-md rounded border border-gray-400">
                <div class="w-full flex justify-center text-gray-600 mb-3">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-9 h-9">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z" />
                      </svg>
                      
                </div>
                <h1 class="text-gray-800 font-xl font-bold flex justify-center tracking-8 leading-tight mb-4">{{ title }}</h1>
                <p class="text-gray-600 text-sm flex justify-center tracking-normal leading-tight mb-4 text-center	">{{ content }}</p>

                <div class="flex items-center justify-center w-full mt-5 reveal">
                    <a id="btnRedirect" href="{{ action }}" class="focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-700 transition duration-150 ease-in-out hover:bg-red-400 bg-red-500 rounded text-white px-8 py-2 text-sm">{{ button }}</a>
                    <button class="focus:outline-none focus:ring-2 focus:ring-offset-2  focus:ring-gray-400 ml-3 bg-gray-100 transition duration-150 text-gray-600 ease-in-out hover:border-gray-400 hover:bg-gray-300 border rounded px-8 py-2 text-sm" onclick="modalHandler()">Annuler</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let modalComponent = document.getElementById("modal");

        function modalHandler(val, id) {
            if (val) {
                fadeIn(modalComponent);
                document.getElementById("btnRedirect").href = "{{ action }}" + id;
            } else {
                fadeOut(modalComponent);
            }
        }
        function fadeOut(el) {
            el.style.opacity = 1;
            (function fade() {
                if ((el.style.opacity -= 0.1) < 0) {
                    el.style.display = "none";
                } else {
                    requestAnimationFrame(fade);
                }
            })();
        }
        function fadeIn(el, display) {
            el.style.opacity = 0;
            el.style.display = display || "flex";
            (function fade() {
                let val = parseFloat(el.style.opacity);
                if (!((val += 0.2) > 1)) {
                    el.style.opacity = val;
                    requestAnimationFrame(fade);
                }
            })();
        }
    </script>
    
</dh-component>